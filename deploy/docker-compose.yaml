version: "3.9"

services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-namesmith_db}
      POSTGRES_USER: ${POSTGRES_USER:-namesmith_admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-replace-with-password}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    volumes:
      - redis-data:/data

  api:
    build:
      context: ..
      dockerfile: deploy/api.Dockerfile
    restart: unless-stopped
    env_file:
      - ./app.env
    environment:
      DATABASE_URL: ${DATABASE_URL:?DATABASE_URL is required}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL:-redis://redis:6379/0}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND:-redis://redis:6379/0}
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"

  web:
    build:
      context: ..
      dockerfile: deploy/web.Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:?NEXT_PUBLIC_API_URL is required}
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:?NEXT_PUBLIC_API_URL is required}
    depends_on:
      - api
    ports:
      - "3000:3000"

volumes:
  postgres-data:
  redis-data:
